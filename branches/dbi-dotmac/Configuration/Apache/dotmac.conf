# If this is giving you warnings/errors - review your setup
# mod_perl _needs_ to be loaded before _this_ file is parsed!!!
# when you're sure mod_perl is already loaded here, just comment out the following line
LoadModule perl_module modules/mod_perl.so

# You'll want to uncomment this on debian/ubuntu
# on other systems this might already be set in httpd.conf
# DAVLockDB /var/www/dotmac/locks/DAVLockDB
DavDepthInfinity on

NameVirtualHost *:80
LogFormat "%v %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" dotmac

<Directory "/var/www/dotmac/idisk">
	Options All +Indexes
</Directory>

BrowserMatch "^WebDAVFS/" redirect-carefully
BrowserMatch "^DotMacKit" redirect-carefully
BrowserMatch "^DAVKit/" redirect-carefully

PerlLoadModule Apache::AuthenHook

<Perl >
$Apache2::PerlSections::Save = 1;
################################################################################
### config starts here #########################################################
################################################################################
	# probably these are the only 2 things you want to change
	# the rootpath to notmac
	my $dotMacRootPath = "/var/www/dotmac";
	# the IP address of your server
	my $dotMacIPAddress = '###.###.###.###';


	#currently the following types are available (Sections Headers Locks Body)
	#example: my $LoggingTypes = '"Sections Locks"';
	my $LoggingTypes = '"Sections Locks"';

	
	# names, names, names...
	my $dotMacDBType = 'DotMac::AuthenDigestDM';
	my $dotMacDBServType = 'mysql';
	my $dotMacDBServHost = 'localhost';
	my $dotMacDBName = 'dotmac';
	my $dotMacDBUser = 'dotmac';
	my $dotMacDBPasswd = 'dotmac';
	my $dotMacPerlDBI = 'DBI:mysql:database=dotmac;host=localhost';

	my $dotMacUserDBName = 'iDiskUsers';
	my $dotMacAdminDBName = 'iDiskAdmins';
	my $dotMacRealm = 'idisk.mac.com';
	my $dotMacInfoDBname = 'info.dat';
	my $dotMacLockTokenDBname = 'locktoken.dat';
	my $dotMacUserTokenDBname = 'usertoken.dat';
	my $dotMacAttrDBname = 'attributes.dat';
	my $dotMacUdataDBname = 'user.dat';
	
	
	# these are the default locations for dotMac folders (under $dotMacRootPath)
	my $dotMaciDiskPath = "$dotMacRootPath/idisk";
	my $dotMacUserDataPath = "$dotMacRootPath/userxml";
	my $dotMacPrivatePath = "$dotMacRootPath/private";
	my $dotMacUserDB = "$dotMacPrivatePath/$dotMacUserDBName";
	my $dotMacAdminDB = "$dotMacPrivatePath/$dotMacAdminDBName";
	#vhosts
	my $dotMacConfigurationPath = "$dotMacRootPath/configuration";
	my $dotMacStubPath = "$dotMacRootPath/stub";
	my $dotMacPerlmodulesPath = "$dotMacRootPath/perlmodules";

################################################################################
### config ends here ###########################################################
################################################################################
	eval "use lib '$dotMacPerlmodulesPath'"; die $@ if $@;
	eval "use Apache2::compat"; die $@ if $@;
	eval "use DotMac::CommonCode"; die $@ if $@;
	eval "use DotMac::DotMacDB"; die $@ if $@;
	eval "use Apache::AuthenHook"; die $@ if $@;
	
	push @PerlSetVar, ['dotMacPerlDBI' => $dotMacPerlDBI];
	push @PerlSetVar, ['dotMacDBUser' => $dotMacDBUser];
	push @PerlSetVar, ['dotMacDBPasswd' => $dotMacDBPasswd];
	push @PerlSetVar, ['dotMacRootPath' => $dotMacRootPath];
	push @PerlSetVar, ['dotMaciDiskPath' => $dotMaciDiskPath];
	push @PerlSetVar, ['dotMacUserDataPath' => $dotMacUserDataPath];
	push @PerlSetVar, ['dotMacDBType' => $dotMacDBType];
	push @PerlSetVar, ['dotMacUserDB' => $dotMacUserDB];
	push @PerlSetVar, ['dotMacRealm' => $dotMacRealm];
	push @PerlSetVar, ['dotMacInfoDBname' => $dotMacInfoDBname];
	push @PerlSetVar, ['dotMacLockTokenDBname' => $dotMacLockTokenDBname];
	push @PerlSetVar, ['dotMacUserTokenDBname' => $dotMacUserTokenDBname];
	push @PerlSetVar, ['dotMacAttrDBname' => $dotMacAttrDBname];
	push @PerlSetVar, ['dotMacUdataDBname' => $dotMacUdataDBname];
	# vhosts
	push @PerlSetVar, ['dotMacConfigurationPath' => $dotMacConfigurationPath];
	push @PerlSetVar, ['dotMacStubPath' => $dotMacStubPath];

	push @PerlSetVar, ['LoggingTypes' => $LoggingTypes];

	require DotMac::CommonCode;
	require HTTPD::UserAdmin;
################################################################################
### vhosts start here ##########################################################
################################################################################
# push @Alias, [ '/idiskAdmin/' => '/var/www/dotmac/idiskAdmin/' ];

push @{	$LocationMatch{"/locate"} }, {
	SetHandler => 'perl-script',
	PerlResponseHandler => 'DotMac::locate',
	satisfy => 'any',
};

push @{ $Directory{"$dotMacRootPath"} }, {
	Order => 'allow,deny',
	Allow => 'from all'
};

push @{ $VirtualHost{"$dotMacIPAddress:443"} } , {
	ServerName => "dot.mac.com",
	ServerAlias => [ qw (www.mac.com syncmgmt.mac.com idisk.mac.com configuration.apple.com lcs.mac.com certinfo.mac.com) ],
	DocumentRoot => "$dotMaciDiskPath",
	SSLEngine => "on",
	SSLCertificateFile => "$dotMacPrivatePath/server.crt",
	SSLCertificateKeyFile => "$dotMacPrivatePath/server.key",
	CustomLog => [ "logs/idiskAccesslog", "dotmac" ],
	ErrorLog => "logs/idiskErrorlog",
	ServerSignature => 'Off',
	Alias => [ '/configurations/' => "$dotMacConfigurationPath/configurations/"],
	PerlTransHandler => "DotMac::DMTransHandler",
	LocationMatch => {
	    "/servlet/" => {
	    satisfy => 'any',
		SetHandler => "perl-script",
		PerlResponseHandler   => "DotMac::ServiceRequest",
	    },
	    "/WebObjects/Info.woa/wa/" => {
		SetHandler => 'perl-script',
		PerlResponseHandler => 'DotMac::WebObjects::Infowoa::wa',
		satisfy => 'any',
	    },
	    "/WebObjects/RequestRouter.woa/wa/" => {
		SetHandler => 'perl-script',
		PerlResponseHandler => 'DotMac::WebObjects::RequestRouterwoa::wa',
		satisfy => 'any',
	    },
	    "/locate" => {
		SetHandler => 'perl-script',
		PerlResponseHandler => 'DotMac::locate',
		satisfy => 'any',
	    },
	},
	Location => { #Host: lcs.mac.com:443
		'/osxSharedSecret' => {
			SetHandler => "perl-script",
			PerlResponseHandler => 'DotMac::osxSharedSecret',
			Order => 'allow,deny',
			Allow => 'from all',
			satisfy => 'any',
			},
		},
};

push @{ $VirtualHost{"*:80"} } , {
	ServerName => "notify.mac.com",
	DocumentRoot => "$dotMacStubPath",
	CustomLog => [ "logs/idiskAccesslog", "dotmac" ],
	ErrorLog => "logs/idiskErrorlog",
	ServerSignature => 'Off',
	LocationMatch => {
	    "/" => {
		SetHandler => 'perl-script',
		PerlResponseHandler => 'DotMac::Notify',
	    },
	},
};
push @{ $VirtualHost{"*:80"} } , {
	ServerName => "delta.mac.com",
	DocumentRoot => "$dotMacStubPath",
	CustomLog => [ "logs/idiskAccesslog", "dotmac" ],
	ErrorLog => "logs/idiskErrorlog",
	ServerSignature => 'Off',
	LocationMatch => {
	    "/status" => {
		SetHandler => 'perl-script',
		PerlResponseHandler => 'DotMac::Status',
	    },
	},
};
push @{ $VirtualHost{"*:80"} } , {
	ServerName => "configuration.apple.com",
	DocumentRoot => "$dotMacConfigurationPath",
	CustomLog => [ "logs/idiskAccesslog", "dotmac" ],
	ErrorLog => "logs/idiskErrorlog",
	ServerSignature => 'Off',
	Location => {
		'/idiskAdmin' => {
			SetHandler => "perl-script",
			PerlResponseHandler => 'DotMac::iDiskUserAdmin',
			AuthType => "Digest",
			AuthName => "$dotMacRealm",
			AuthDigestProvider => "$dotMacDBType",
			Require => "valid-user",
			},
		},
};
push @{ $VirtualHost{"*:80"} } , {
	ServerName => "idisk.mac.com",
	ServerAlias => 'publish.mac.com',
	DocumentRoot => "$dotMaciDiskPath",
	CustomLog => [ "logs/idiskAccesslog", "dotmac" ],
	ErrorLog => "logs/idiskErrorlog",
	ServerSignature => 'Off',
	PerlTransHandler => 'DotMac::DMTransHandler',
	LocationMatch => {
	    "/locate" => {
		SetHandler => 'perl-script',
		PerlResponseHandler => 'DotMac::locate',
		satisfy => 'any',
	    },
	},
};

$Directory{$dotMaciDiskPath} = {
	AuthType => "Digest",
	AuthName => "$dotMacRealm",
	AuthDigestProvider => "$dotMacDBType",
	Limit => {
        "GET HEAD OPTIONS PUT POST COPY PROPFIND DELETE LOCK MKCOL MOVE PROPPATCH UNLOCK ACL"    => {
            require => 'valid-user',
        }
    },
	Require => "valid-user",
	PerlAuthzHandler => "DotMac::UserFolderAuthz",
	PerlFixupHandler => "DotMac::DMFixupHandler",
};

my $dmdb = DotMac::DotMacDB::->new(provider => $dotMacDBServType);
my @users = $dmdb->list_users($dotMacRealm);
for my $user (@users) {
	my $userquota = $dmdb->get_user_quota($user,$dotMacRealm);
	$userquota = 0 if ($userquota eq "");

	$Directory{"$dotMaciDiskPath/$user/"} = {
		Dav => 'On',
		DAVSATMaxAreaSize => "$userquota",
	  };
	  $Directory{"$dotMaciDiskPath/$user/Public/"} = {
		satisfy => 'any',
		PerlAccessHandler => 'DotMac::PublicFolderAccess',
	  };

	}

</Perl>


#<Perl>
#print STDOUT Apache2::PerlSections->dump;
#</Perl>

