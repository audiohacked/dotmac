
# If this is giving you warnings/errors - review your setup
# mod_perl _needs_ to be loaded before _this_ file is parsed!!!
# when you're sure mod_perl is already loaded here, just comment out the following line
#LoadModule perl_module modules/mod_perl.so

# You'll want to uncomment this on debian/ubuntu
# on other systems this might already be set in httpd.conf
# DAVLockDB /var/www/dotmac/locks/DAVLockDB

Listen 443
DavDepthInfinity on
LogFormat "%v %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" dotmac
LogLevel Info
ServerTokens Prod


BrowserMatch "^WebDAVFS/" redirect-carefully
BrowserMatch "^DotMacKit" redirect-carefully
BrowserMatch "^DAVKit/" redirect-carefully

<Perl >
$Apache2::PerlSections::Save = 1;
################################################################################
### config starts here #########################################################
################################################################################
	# probably these are the only 2 things you want to change
	# the rootpath to notmac
	my $dotMacRootPath = "/var/www/dotmac";
	# the IP address of your server
	my $dotMacIPAddress = '';


	#currently the following types are available (Sections Headers Locks Body)
	#example: my $LoggingTypes = "Sections Locks";
	my $LoggingTypes = '"Sections Locks TransHandler"';
	
	
	# names, names, names...
	my $dotMacAuthModule = 'DotMac::AuthenDigestDM';
	my $dotMacDBServType = 'sqlite';
	my $dotMacDBServHost = 'localhost';
	my $dotMacDBName = 'dotmac';
	my $dotMacDBUser = 'dotmac';
	my $dotMacDBPasswd = 'dotmac';
	my $dotMacPerlDBI = 'DBI:mysql:database=dotmac;host=localhost';
	my $dotMacApacheRestart = '"none"';
	my $dotMacUserDBName = 'iDiskUsers';
	my $dotMacAdminDBName = 'iDiskAdmins';
	my $dotMacRealm = 'idisk.mac.com';
	my $dotMacInfoDBname = 'info.dat';
	my $dotMacLockTokenDBname = 'locktoken.dat';
	my $dotMacUserTokenDBname = 'usertoken.dat';
	my $dotMacAttrDBname = 'attributes.dat';
	my $dotMacUdataDBname = 'user.dat';
	
	# these are the default locations for dotMac folders (under $dotMacRootPath)
	my $dotMaciDiskPath = "$dotMacRootPath/idisk";
	my $dotMacUserDataPath = "$dotMacRootPath/userxml";
	my $dotMacPrivatePath = "$dotMacRootPath/private";
	my $dotMacUserDB = "$dotMacPrivatePath/$dotMacUserDBName";
	my $dotMacAdminDB = "$dotMacPrivatePath/$dotMacAdminDBName";
	#vhosts
	my $dotMacConfigurationPath = "$dotMacRootPath/configuration";
	my $dotMacStubPath = "$dotMacRootPath/stub";
	my $dotMacPerlmodulesPath = "$dotMacRootPath/perlmodules";

################################################################################
### config ends here ###########################################################
################################################################################
	eval "use lib '$dotMacPerlmodulesPath'"; die $@ if $@;
	eval "use Apache2::compat"; die $@ if $@;
	eval "use DotMac::CommonCode"; die $@ if $@;
	eval "use DotMac::DotMacDB"; die $@ if $@;
	eval "use Apache::httpd_conf ()";
	eval "use Data::Dumper()";
#	eval "use Apache::AuthenHook"; die $@ if $@;

	push @PerlSetVar, ['dotMacIPAddress' => $dotMacIPAddress];
	push @PerlSetVar, ['dotMacAuthModule' => $dotMacAuthModule];
	push @PerlSetVar, ['dotMacDBServType' => $dotMacDBServType];	
	push @PerlSetVar, ['dotMacDBServHost' => $dotMacDBServHost];	
	push @PerlSetVar, ['dotMacDBName' => $dotMacDBName];	
	push @PerlSetVar, ['dotMacDBUser' => $dotMacDBUser];	
	push @PerlSetVar, ['dotMacDBPasswd' => $dotMacDBPasswd];	
	push @PerlSetVar, ['dotMacPerlDBI' => $dotMacPerlDBI];
	push @PerlSetVar, ['dotMacDBUser' => $dotMacDBUser];
	push @PerlSetVar, ['dotMacDBPasswd' => $dotMacDBPasswd];
	push @PerlSetVar, ['dotMacRootPath' => $dotMacRootPath];
	push @PerlSetVar, ['dotMacPrivatePath' => $dotMacPrivatePath];
	push @PerlSetVar, ['dotMaciDiskPath' => $dotMaciDiskPath];
	push @PerlSetVar, ['dotMacUserDataPath' => $dotMacUserDataPath];
#	push @PerlSetVar, ['dotMacDBType' => $dotMacDBType];
	push @PerlSetVar, ['dotMacUserDB' => $dotMacUserDB];
	push @PerlSetVar, ['dotMacAdminDB' => $dotMacAdminDB];

	push @PerlSetVar, ['dotMacApacheRestart' => $dotMacApacheRestart];
	push @PerlSetVar, ['dotMacRealm' => $dotMacRealm];
	push @PerlSetVar, ['dotMacInfoDBname' => $dotMacInfoDBname];
	push @PerlSetVar, ['dotMacLockTokenDBname' => $dotMacLockTokenDBname];
	push @PerlSetVar, ['dotMacUserTokenDBname' => $dotMacUserTokenDBname];
	push @PerlSetVar, ['dotMacAttrDBname' => $dotMacAttrDBname];
	push @PerlSetVar, ['dotMacUdataDBname' => $dotMacUdataDBname];
	push @PerlSetVar, ['LoggingTypes' => $LoggingTypes];
	# vhosts
	push @PerlSetVar, ['dotMacConfigurationPath' => $dotMacConfigurationPath];
	push @PerlSetVar, ['dotMacStubPath' => $dotMacStubPath];
	push @PerlSetVar, ['DumpHeaders_File' => '/tmp/443headersdumped'];


	require DotMac::CommonCode;
	require HTTPD::UserAdmin;
################################################################################
### vhosts start here ##########################################################
################################################################################
# push @Alias, [ '/idiskAdmin/' => '/var/www/dotmac/idiskAdmin/' ];
my $s = Apache2::ServerUtil->server;
if (Apache2::ServerUtil::restart_count() == 1) {
        open(PIDFILE,">$dotMacPrivatePath/dotmac.pid");
        print PIDFILE time();
        close(PIDFILE);
}
my $conf = <<"EOC";
NameVirtualHost $dotMacIPAddress:80

<Directory $dotMacRootPath>
	Order allow,deny
	Allow from all
</Directory>

<VirtualHost $dotMacIPAddress:443>
	ServerName dot.mac.com
	ServerAlias www.mac.com syncmgmt.mac.com idisk.mac.com configuration.apple.com lcs.mac.com certinfo.mac.com
	DocumentRoot $dotMaciDiskPath
	SSLEngine on
	SSLCertificateFile $dotMacPrivatePath/server.crt
	SSLCertificateKeyFile $dotMacPrivatePath/server.key                                                                                                      
        CustomLog logs/idiskAccesslog dotmac                                                                                                              
        ErrorLog logs/idiskErrorlog                                                                                                                              
        ServerSignature Off                                                                                                                                      
        Alias /configurations/ $dotMacConfigurationPath/configurations/                                                                                  
        PerlTransHandler DotMac::DMTransHandler                
                                                                                                                                                                       
       	<LocationMatch /servlet/>
            	satisfy any                                                                                                                                          
            	SetHandler perl-script                                                                                                                           
            	PerlResponseHandler DotMac::ServiceRequest
        </LocationMatch>
	<LocationMatch /WebObjects/WSComments.woa/>                                                                                                                        
                SetHandler perl-script                                                                                                                           
                PerlResponseHandler DotMac::WebObjects::Wscomments
    		satisfy any                                                                                                                                      
        </LocationMatch>
	<LocationMatch /WebObjects/Info.woa/wa/>
		SetHandler perl-script
		PerlResponseHandler DotMac::WebObjects::Infowoa::wa
		satisfy any
	</LocationMatch>
	<LocationMatch /WebObjects/RequestRouter.woa/wa/>
		SetHandler perl-script
		PerlResponseHandler DotMac::WebObjects::RequestRouterwoa::wa
		satisfy any
	</LocationMatch>
	<LocationMatch /locate>
		SetHandler perl-script
		PerlResponseHandler DotMac::locate
		satisfy any
	</LocationMatch>
	<Location /osxSharedSecret>
		SetHandler perl-script
		PerlResponseHandler => DotMac::osxSharedSecret
		Order allow,deny
		Allow from all
		satisfy any
	</Location>
</VirtualHost> 
<VirtualHost $dotMacIPAddress:80>

	ServerName notify.mac.com
	DocumentRoot $dotMacStubPath
	CustomLog logs/idiskAccesslog dotmac
	ErrorLog logs/idiskErrorlog
	ServerSignature  Off

	<LocationMatch /WebObjects/WSComments.woa/>
		SetHandler  perl-script
		PerlResponseHandler DotMac::WebObjects::Wscomments
		satisfy  any
	</LocationMatch>
	<LocationMatch />
		SetHandler  perl-script
		PerlResponseHandler DotMac::Notify
	</LocationMatch>
	<LocationMatch /locate>
		SetHandler perl-script
		PerlResponseHandler DotMac::locate
		satisfy any
	</LocationMatch>


</VirtualHost>
<VirtualHost $dotMacIPAddress:80>
	ServerName delta.mac.com
	DocumentRoot $dotMacStubPath
	CustomLog logs/idiskAccesslog dotmac
	ErrorLog  logs/idiskErrorlog
	ServerSignature Off
	<LocationMatch /status> 
		SetHandler  perl-script
		PerlResponseHandler DotMac::Status
		AuthType Digest
		AuthName idisk.mac.com
		AuthDigestProvider file
		AuthUserFile $dotMacUserDB
		Require  valid-user
	</LocationMatch>
</VirtualHost>
<VirtualHost $dotMacIPAddress:80>
	ServerName configuration.apple.com
	DocumentRoot $dotMacConfigurationPath
	CustomLog logs/idiskAccesslog dotmac
	ErrorLog logs/idiskErrorlog
	ServerSignature Off
	<Location /idiskAdmin>
		SetHandler  perl-script
		PerlResponseHandler DotMac::iDiskUserAdmin
		AuthType Digest
		AuthName $dotMacRealm
		AuthDigestProvider file
	   	AuthUserFile $dotMacAdminDB
		Require valid-user
	</Location>
</VirtualHost>
<VirtualHost $dotMacIPAddress:80>
	ServerName idisk.mac.com
	ServerAlias publish.mac.com
	DocumentRoot $dotMaciDiskPath
	CustomLog logs/idiskAccesslog dotmac
	ErrorLog  logs/idiskErrorlog
	ServerSignature Off
	PerlTransHandler DotMac::DMTransHandler
	<LocationMatch /locate> 
		SetHandler perl-script
		PerlResponseHandler DotMac::locate
		satisfy any
	</LocationMatch>
</VirtualHost>
<Directory $dotMaciDiskPath>
	AuthType Digest
	AuthName $dotMacRealm
	AuthDigestProvider file
	AuthUserFile $dotMacUserDB
	Options indexes
	PerlFixupHandler DotMac::DMFixupHandler
</Directory>
<Directory $dotMaciDiskPath/*>
	Deny from all
</Directory>

EOC
$s->add_config([split /\n/,$conf]);

my $perUserConf;
my $dmdb = DotMac::DotMacDB::->new(cfg_array => \@PerlSetVar);
my @users = $dmdb->list_users_idisk($dotMacRealm);
for my $user (@users) {
	print STDOUT "$user\n";
	my $userquota = $dmdb->get_user_quota($user,$dotMacRealm);
	$userquota = 0 if ($userquota eq "");
	$perUserConf =<<"EOPC";
<Directory $dotMaciDiskPath/$user>
	Dav On
	DAVSATMaxAreaSize $userquota
	require user $user
	order Deny,Allow
	allow from all
</Directory>
<Directory $dotMaciDiskPath/$user/Public/>
	satisfy any
	PerlAccessHandler DotMac::PublicFolderAccess
</Directory>
Alias /$user-Public $dotMaciDiskPath/$user/Public/

EOPC
$s->add_config([split /\n/,$perUserConf]);
}

$dmdb="";


</Perl>


#<Perl>
#print STDOUT Apache2::PerlSections->dump;
#</Perl>

